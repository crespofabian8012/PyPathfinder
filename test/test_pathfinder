import functools

from typing import Any
import os
import numpy as np
import pytest
import stan
from cmdstanpy import cmdstan_path, CmdStanModel

CURRENT_DIR = os.path.realpath(os.path.dirname(__file__))

from src.pathfinder import Pathfinder
import bridgestan as bs


def test_pathfinder_funnel100() -> None:
    init_bound = 10.0 
    init_theta =  -1*init_bound + 2*init_bound* np.random.random(100) 

    funnel100_dir = os.path.join(cmdstan_path(), 'example', 'funnel100')
    stan_file = os.path.join(funnel100_dir, 'funnel100.stan')
    
    bs_model = bs.StanModel(stan_file)
    model = CmdStanModel(stan_file=stan_file)
    
    fit = model.sample(num_chains=4, num_samples=1000)

    
    # def fn(theta):
    #     log_prob(posterior, theta, adjust_transform = TRUE, 
    #                               gradient = TRUE)[1]
    # def gr(theta):
    #     -1* grad_log_prob(posterior, theta, 
    #                                    adjust_transform = TRUE)
    
    # pathfinder = Pathfinder(
    #            init_point = init_theta,
    #            init_bound = init_bound,
    #            fn = fn,
    #            grad = gr,
    #            number_iter = 1000,
    #            explore_hmc_from_initial = False,
    #            seed = 12345)
    


    #np.testing.assert_array_equal(draws_1, draws_2)



